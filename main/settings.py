"""
Django settings for main project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from pathlib import Path
from dotenv import load_dotenv

load_dotenv()

BASE_DIR = Path(__file__).resolve().parent.parent

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("SECRET_KEY", "default-key-123")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv("DEBUG", "False").lower() in ("true", "1")

ALLOWED_HOSTS = os.getenv("ALLOWED_HOSTS", "127.0.0.1,localhost").split(",")


# Application definition

INSTALLED_APPS = [
    'modeltranslation',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'website',
    'services',
    'projects',
    'reviews',
    'blog',
    'about',
    'contacts',
    'easy_thumbnails',
]

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'website.context_processors.contact_form_processor', 
            ],
        },
    },
]


MIDDLEWARE = [
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'main.urls'

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": os.getenv("POSTGRES_DB", "rootline_database"),
        "USER": os.getenv("POSTGRES_USER", "rootline_user"),
        "PASSWORD": os.getenv("POSTGRES_PASSWORD", "your_default_password"),
        "HOST": os.getenv("POSTGRES_HOST", "db"),  # Имя контейнера базы данных
        "PORT": os.getenv("POSTGRES_PORT", "5432"),
    }
}

WSGI_APPLICATION = 'main.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en'

TIME_ZONE = 'UTC'

USE_I18N = True
USE_L10N = True

LANGUAGES = [
    ('uk', 'Ukrainian'),
    ('en', 'English'),
]

MODELTRANSLATION_DEFAULT_LANGUAGE = 'en'  # или 'uk', если основной язык украинский
MODELTRANSLATION_FALLBACK_LANGUAGES = ('en', 'uk')

LOCALE_PATHS = [
    BASE_DIR / 'locale',  # Папка, куда будем складывать переводы
]

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

# ...
BASE_DIR = Path(__file__).resolve().parent.parent
STATIC_URL = '/static/'
MEDIA_URL = '/media/'

STATIC_ROOT = os.getenv("STATIC_ROOT", "/app/static/")
MEDIA_ROOT = os.getenv("MEDIA_ROOT", "/app/media/")

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s',
            'datefmt': '%Y-%m-%d %H:%M:%S'
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'easy_thumbnails': {
            'handlers': ['console'],
            'level': 'DEBUG',  # или INFO, если нужно меньше сообщений
            'propagate': False,
        },
    },
}

THUMBNAIL_FORMAT = None
THUMBNAIL_DEFAULT_EXTENSION = None
THUMBNAIL_PRESERVE_EXTENSIONS = True
THUMBNAIL_ALIASES = {
    '': 
    {
        '480': {'size': (480, 0), 'crop': False, 'format': 'WEBP', 'quality': 70,},
        '768': {'size': (768, 0), 'crop': False, 'format': 'WEBP', 'quality': 70,},
        '1280': {'size': (1280, 0), 'crop': False, 'format': 'WEBP', 'quality': 70,},
        '1920': {'size': (1920, 0), 'crop': False, 'format': 'WEBP', 'quality': 70,},
        'width510': {
            'size': (510, 400),   # ширина 510, высота 400
            'crop': True,         # обрезаем (crop), чтобы ровно заполнить (510×400)
            'format': 'WEBP',
            'quality': 70,
        },
        'width690': {
            'size': (690, 400),   # 690×400
            'crop': True,
            'format': 'WEBP',
            'quality': 70,
        },
        'width458': {
            # у вас было 457.5, берём 458 (половины пикселя не бывает)
            'size': (458, 400),
            'crop': True,
            'format': 'WEBP',
            'quality': 70,
        },
        'width360': {
            'size': (360, 400),
            'crop': True,
            'format': 'WEBP',
            'quality': 70,
        },
        'width420': {
            'size': (420, 400),
            'crop': True,
            'format': 'WEBP',
            'quality': 70,
        },
        'project_big_546': {
            'size': (546, 350),
            'crop': True,
            'format': 'WEBP',
            'quality': 70,
        },
        'project_big_525': {
            'size': (525, 350),
            'crop': True,
            'format': 'WEBP',
            'quality': 70,
        },
        'project_big_705': {
            'size': (705, 350),
            'crop': True,
            'format': 'WEBP',
            'quality': 70,
        },
        'project_big_745': {
            'size': (745, 350),
            'crop': True,
            'format': 'WEBP',
            'quality': 70,
        },
        'project_big_865': {
            'size': (865, 350),
            'crop': True,
            'format': 'WEBP',
            'quality': 70,
        },

        # --- «Маленькие» миниатюры (в 2 раза уже), для остальных ---
        'project_small_273': {
            'size': (273, 350),
            'crop': True,
            'format': 'WEBP',
            'quality': 70,
        },
        'project_small_263': {
            'size': (263, 350),
            'crop': True,
            'format': 'WEBP',
            'quality': 70,
        },
        'project_small_352': {
            'size': (352, 350),
            'crop': True,
            'format': 'WEBP',
            'quality': 70,
        },
        'project_small_373': {
            'size': (373, 350),
            'crop': True,
            'format': 'WEBP',
            'quality': 70,
        },
        'project_small_432': {
            'size': (432, 350),
            'crop': True,
            'format': 'WEBP',
            'quality': 70,
        },
    },
}
